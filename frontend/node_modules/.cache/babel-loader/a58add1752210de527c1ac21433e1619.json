{"ast":null,"code":"var _jsxFileName = \"/home/olvx/workspace/django-todo-react/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Modal from './components/Modal';\nconst todoItens = [{\n  id: 1,\n  title: \"Go to Market\",\n  description: \"Buy ingredients to prepare dinner\",\n  complete: true\n}, {\n  id: 2,\n  title: \"Study\",\n  description: \"Read Algebra and History textbook for upcoming test\",\n  complete: false\n}, {\n  id: 3,\n  title: \"Sally's books\",\n  description: \"Go to library to rent sally's books\",\n  complete: true\n}, {\n  id: 4,\n  title: \"Article\",\n  description: \"Write article on how to use django with react\",\n  complete: false\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n      alert(\"save\" + JSON.stringify(item));\n    };\n\n    this.handleDelete = item => {\n      alert(\"delete\" + JSON.stringify(item));\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        complete: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayComplete = status => {\n      if (status) {\n        return this.setState({\n          viewComplete: true\n        });\n      }\n\n      return this.setState({\n        viewComplete: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return React.createElement(\"div\", {\n        className: \"my-5 tab-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => this.displayComplete(true),\n        className: this.state.viewComplete ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"complete\"), React.createElement(\"span\", {\n        onClick: () => this.displayComplete(false),\n        className: this.state.viewComplete ? \"\" : \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Imcomplete\"));\n    };\n\n    this.renderItems = () => {\n      const viewComplete = this.state.viewComplete;\n      const newItems = this.state.todoList.filter(item => item.complete === viewComplete);\n      return newItems.map(item => React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        title: item.description,\n        className: \"todo-tile mr-2 \".concat(this.state.viewCompleted ? \"completed-todo\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, item.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary mr-2\",\n        onClick: () => this.editItem(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" Edit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger mr-2\",\n        onClick: () => this.handleDelete(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \" Delete \"))));\n    };\n\n    this.state = {\n      modal: false,\n      viewComplete: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        complete: false\n      },\n      todoList: todoItens\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Todo app\"), React.createElement(\"div\", {\n      className: \"row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-10 mx-auto p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Add task\")), this.renderTabList(), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.renderItems())))), this.state.modal ? React.createElement(Modal, {\n      activeItem: this.state.activeItem,\n      toggle: this.toggle,\n      onSave: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/olvx/workspace/django-todo-react/frontend/src/App.js"],"names":["React","Component","Modal","todoItens","id","title","description","complete","App","constructor","props","toggle","setState","modal","state","handleSubmit","item","alert","JSON","stringify","handleDelete","createItem","activeItem","editItem","displayComplete","status","viewComplete","renderTabList","renderItems","newItems","todoList","filter","map","viewCompleted","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './App.css';\n\nimport Modal  from './components/Modal'\n\n\nconst todoItens = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    complete: true\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for upcoming test\",\n    complete: false\n  },\n  {\n    id: 3,\n    title: \"Sally's books\",\n    description: \"Go to library to rent sally's books\",\n    complete: true\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use django with react\",\n    complete: false\n  }\n]\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      modal: false,\n      viewComplete: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        complete: false\n      },\n      todoList: todoItens,\n\n      }\n    }\n\n    toggle =() => {\n       this.setState({modal: !this.state.modal})\n    }\n\n    handleSubmit = item => {\n      this.toggle()\n      alert(\"save\" + JSON.stringify(item))\n    }\n\n    handleDelete = item => {\n      alert(\"delete\" + JSON.stringify(item))\n    }\n    \n    createItem = () => {\n      const item = {title: \"\", description: \"\" , complete: false}\n      this.setState({activeItem: item, modal: !this.state.modal})\n    }\n\n    editItem = item => {\n      this.setState({activeItem: item, modal: !this.state.modal})\n    }\n    \n\n  displayComplete = status => {\n    if(status){\n      return this.setState({viewComplete: true})\n    }\n    return this.setState({viewComplete: false})\n  }\n\n  renderTabList = () =>{\n    return(\n        <div className=\"my-5 tab-list\">\n          <span\n              onClick={() => this.displayComplete(true)}\n              className={this.state.viewComplete ? \"active\": \"\"}\n          >\n            complete \n          </span>\n          <span\n            onClick={() => this.displayComplete(false)}\n            className={this.state.viewComplete ? \"\": \"active\"}\n          >\n            Imcomplete\n          </span>\n          \n        </div>\n    ) \n  }\n\n  renderItems = () => {\n    const { viewComplete } = this.state\n    const newItems = this.state.todoList.filter(\n       item => item.complete === viewComplete\n    )\n    return newItems.map( item =>(\n      <li key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\">\n\n        <span \n        title={item.description}\n        className={`todo-tile mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button className=\"btn btn-secondary mr-2\" onClick={() => this.editItem(item)}> Edit</button>\n          <button className=\"btn btn-danger mr-2\" onClick={() => this.handleDelete(item)}> Delete </button>\n        </span>\n      </li>\n     )\n    )\n  }\n  render(){\n      return (\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n          <div className=\"row \">\n            <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n              <div className=\"card p-3\">\n                <div className=\"\">\n                  <button className=\"btn btn-primary\">Add task</button>\n                </div>\n                {this.renderTabList()}\n                <ul className=\"list-group list-group-flush\">\n                  {this.renderItems()}\n                </ul>\n              </div>\n            </div>\n          </div>\n          {this.state.modal ? (\n            <Modal \n              activeItem={this.state.activeItem}\n              toggle={this.toggle}\n              onSave={this.handleSubmit}\n              />\n          ): null }\n        </main>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}